// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Services.Database;

namespace Server.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210713142054_StaticFileAdded")]
    partial class StaticFileAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("Server.Models.Database.ChangeLogEntryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Change")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("VersionId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("VersionId");

                    b.ToTable("ChangelogEntries");
                });

            modelBuilder.Entity("Server.Models.Database.FileEntityModel", b =>
                {
                    b.Property<byte[]>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UploaderUser")
                        .HasColumnType("varchar(767)");

                    b.HasKey("Key");

                    b.HasIndex("UploaderUser");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Server.Models.Database.MarketplaceModel", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Key")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("Marketplaces");
                });

            modelBuilder.Entity("Server.Models.Database.StaticFileModel", b =>
                {
                    b.Property<long>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Key");

                    b.ToTable("StaticFiles");
                });

            modelBuilder.Entity("Server.Models.Database.UserModel", b =>
                {
                    b.Property<string>("User")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("KeyHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("User");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Server.Models.Database.VersionEntityModel", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Marketplace")
                        .IsRequired()
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TextVersion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Branch");

                    b.HasIndex("Marketplace");

                    b.HasIndex("Version");

                    b.ToTable("Versions");
                });

            modelBuilder.Entity("Server.Models.Database.VersionFilesModel", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("FileKey")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("Platform")
                        .HasColumnType("int");

                    b.Property<byte[]>("VersionId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("FileKey");

                    b.HasIndex("VersionId");

                    b.ToTable("VersionFiles");
                });

            modelBuilder.Entity("Server.Models.Database.ChangeLogEntryModel", b =>
                {
                    b.HasOne("Server.Models.Database.VersionEntityModel", "Version")
                        .WithMany("Changes")
                        .HasForeignKey("VersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Version");
                });

            modelBuilder.Entity("Server.Models.Database.FileEntityModel", b =>
                {
                    b.HasOne("Server.Models.Database.UserModel", "Uploader")
                        .WithMany()
                        .HasForeignKey("UploaderUser");

                    b.Navigation("Uploader");
                });

            modelBuilder.Entity("Server.Models.Database.VersionFilesModel", b =>
                {
                    b.HasOne("Server.Models.Database.FileEntityModel", "File")
                        .WithMany("ReferencedVersions")
                        .HasForeignKey("FileKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Models.Database.VersionEntityModel", "Version")
                        .WithMany("Files")
                        .HasForeignKey("VersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");

                    b.Navigation("Version");
                });

            modelBuilder.Entity("Server.Models.Database.FileEntityModel", b =>
                {
                    b.Navigation("ReferencedVersions");
                });

            modelBuilder.Entity("Server.Models.Database.VersionEntityModel", b =>
                {
                    b.Navigation("Changes");

                    b.Navigation("Files");
                });
#pragma warning restore 612, 618
        }
    }
}
